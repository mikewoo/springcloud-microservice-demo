server:
  port: 8751

eureka:
  instance:
    hostname: localhost
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}

  client:
    eureka-server-port: 8761
    serviceUrl:
      defaultZone: http://localhost:${eureka.client.eureka-server-port}/eureka/

spring:
  application:
    name: microservice-order-service-with-hystrix
  redis:
    host: 192.168.1.242
    port: 6379
    timeout: 2000
  zipkin:
    # base-url: http://localhost:9411/ #默认http通信的配置方式
    sender:
      type: kafka
    service:
      name: ${spring.application.name} #zipkin里看到的的service name
  kafka:
      bootstrap-servers: 192.168.33.100:9092 #集群的情况直接用“,”分割
  sleuth:
    sampler:
      probability: 1

# 给某个服务配置Ribbon自定义的负载均衡策略
microservice-product-service:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

# 修改feign调用超时时间
feign:
  hystrix:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 2000
        readTimeout: 2000

# 调整Hystrix默认超时时间
hystrix:
  command:
    default:
      execution:
        isolation:
          # 禁用Hystrix超时时间设置(实际应用不要禁用超时设置)
          # timeout:
          #   enabled: true
          thread:
            timeoutInMilliseconds: 2000

